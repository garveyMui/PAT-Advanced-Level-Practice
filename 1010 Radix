//
//  main.c
//  20200404
//
//  Created by 梅佳伟 on 2020/4/4.
//  Copyright © 2020 梅佳伟. All rights reserved.
//
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define N 100000

int main()
 {
     char n1[11],n2[11];
     int tag,radixTag;
     scanf("%s",n1);
     scanf("%s",n2);
     scanf("%d",&tag);
     scanf("%d",&radixTag);
     int i,flag=0;
     long long exp=1;
     long long radix1=0,radix2=0,radix=2;
     long long valueN1=0,valueN2=0;
     long long front,rear;
     if(tag==1)
     {
         for(i=(int)strlen(n1)-1;i>=0;i--)
         {
             if(n1[i]>='0'&&n1[i]<='9')
             {
                 valueN1+=(n1[i]-'0')*exp;
             }else
             {
                 valueN1+=(n1[i]-'a'+10)*exp;
             }
             exp*=radixTag;
         }
         rear=valueN1+1;
         front=2;
         if((int)strlen(n2)==1)
         {
             flag=1;
             if(n2[0]-'0'<=1)
                 radix=2;
             else
             {
                 if(n2[0]>='0'&&n2[0]<='9')
                 {
                     radix=n2[0]-'0'+1;
                 }else
                 {
                     radix=n2[0]-'a'+11;
                 }
             }
         }else
         {
             while(front<=rear&&valueN2>=0)
             {
                 radix=(front+rear)/2;
                 valueN2=0;
                 i=(int)strlen(n2)-1;
                 long long exp=1;
                 for(;i>=0;i--)
                 {
                     if(n2[i]>='0'&&n2[i]<='9')
                     {
                         if(n2[i]-'0'>radix2)
                         {
                             radix2=n2[i]-'0';
                         }
                         valueN2+=(n2[i]-'0')*exp;
                         if(valueN2>valueN1||valueN2<0)
                             break;
                         exp*=radix;
                     }else
                     {
                         if(n2[i]-'a'+10>radix2)
                         {
                             radix2=n2[i]-'a'+10;
                         }
                         valueN2+=(n2[i]-'a'+10)*exp;
                         if(valueN2>valueN1||valueN2<0)
                             break;
                         exp*=radix;
                     }
                 }
                 if(radix>radix2&&valueN2==valueN1)
                 {
                     flag=1;
                     break;
                 }
                 if(valueN2>0&&valueN2<valueN1)
                 {
                     front=radix+1;
                 }else if(valueN2<0||valueN2>valueN1)
                 {
                     rear=radix-1;
                 }else
                 {
                     printf("Impossible");
                     exit(0);
                 }
             }
         }
     }else
     {
         for(i=(int)strlen(n2)-1;i>=0;i--)
         {
             if(n2[i]>='0'&&n2[i]<='9')
             {
                 valueN2+=(n2[i]-'0')*exp;
             }else
             {
                 valueN2+=(n2[i]-'a'+10)*exp;
             }
             exp*=radixTag;
         }
         rear=valueN2+1;
         front=2;
         if((int)strlen(n1)==1)
         {
             flag=1;
             if(n1[0]-'0'<=1)
                 radix=2;
             else
             {
                 if(n1[0]>='0'&&n1[0]<='9')
                 {
                     radix=n1[0]-'0'+1;
                 }else
                 {
                     radix=n1[0]-'a'+11;
                 }
             }
         }else
         {
             while(front<=rear&&valueN2>=0)
             {
                 radix=(front+rear)/2;
                 valueN1=0;
                 i=(int)strlen(n1)-1;
                 long long exp=1;
                 for(;i>=0;i--)
                 {
                    if(n1[i]>='0'&&n1[i]<='9')
                    {
                        if(n1[i]-'0'>radix1)
                        {
                            radix1=n1[i]-'0';
                        }
                        valueN1+=(n1[i]-'0')*exp;
                        if(valueN2<valueN1||valueN1<0)
                        break;
                        exp*=radix;
                    }else
                    {
                        if(n1[i]-'a'+10>radix1)
                        {
                            radix1=n1[i]-'a'+10;
                        }
                        valueN1+=(n1[i]-'a'+10)*exp;
                        if(valueN2<valueN1||valueN1<0)
                        break;
                        exp*=radix;
                    }
                }
                if(radix>radix1&&valueN2==valueN1)
                {
                    flag=1;
                    break;
                }
                if(valueN1<0||valueN2<valueN1)
                {
                    rear=radix-1;
                    
                }else if(valueN2>valueN1&&valueN1>0)
                {
                    front=radix+1;
                }else
                {
                    printf("Impossible");
                    exit(0);
                }
             }
         }
     }
     if(flag==1)
         printf("%lld",radix);
     else
         printf("Impossible");
     return 0;
 }
